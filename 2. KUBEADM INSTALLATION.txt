===================================
INSTALLING KUBERNETES ON CENTOS7:-
===================================

1. update /etc/hosts file on master and worker nodes
   #vi /etc/hosts


2. disable swap & uncomment swap in fstab on master and worker node
   #swapoff -a
   #vi /etc/fstab


3. diable selinux on master & worker nodes
   #setenforce 0
   #sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux


4. restart vms to affect selinux and swap
   #init 6


5a. setup firewall rules on master node
    #firewall-cmd --permanent --add-port=6443/tcp
    #firewall-cmd --permanent --add-port=2379-2380/tcp
    #firewall-cmd --permanent --add-port=10250/tcp
    #firewall-cmd --permanent --add-port=10251/tcp
    #firewall-cmd --permanent --add-port=10252/tcp
    #firewall-cmd --reload


5b. setup firewall rules on worker node
   #firewall-cmd --permanent --add-port=10250/tcp
   #firewall-cmd --permanent --add-port=30000-32767/tcp


6. create kubernetes repo on master and worker nodes
   #vi /etc/yum.repos.d/kubernetes.repo
-------------------------------------------------------------------------------
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
         https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
-------------------------------------------------------------------------------


7. install docker kubeadm, kubelet, kubectl on master and worker node
   #yum install -y docker kubeadm
   #systemctl enable docker && systemctl enable kubelet
   #systemctl start docker && systemctl start kubelet


8. Enable IP forwarding or iptables. Update below lines in /etc/sysctl.conf on master and worker node
   #vi /etc/sysctl.d/k8s.conf
-----------------------------------------------------
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1 
---------------------------------------------------
#sysctl -p /etc/sysctl.d/k8s.conf
#sysctl net.ipv4.ip_forward=1


9. Set IP range for pods or docker container: on master node
   #kubeadm init
   #kubeadm init --pod-network-cidr=10.244.0.0/16
   #kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=$(hostname --ip-address) ------------------>for flannel
   #kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address=$(hostname --ip-address) ------------------> for calico
   o/p:- you should see sucessful then execute below commands.
         *now copy the line "kubeadm join --token" in the output and paste in text file, used for later purpose


10. execute below commands to use cluster as root user on master node
    #mkdir -p $HOME/.kube
    #cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    #chown $(id -u):$(id -g) $HOME/.kube/config


11. now deploy one of the selected network to the k8 custer only on master node
    #kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    #kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
    #kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml




12.  now execute following commands on master to check kubernetes pods and node
    #kubectl get nodes
    #kubectl get pods --all-namespaces
    o/p:-now you will see 'k8-master' node running as master and status is ready, 'kube-flannel-ds' networking pod running
         and 'kube-system' pod status is running


13. copying token(which generated while initializing kubeadm from master) on worker nodes. joining master & worker nodes
    #kubeadm join --token


14. now verify node status
    #kubectl get nodes
    o/p:- you should see worker nodes


============================================
INSTALLING KUBERNETES DASHBOARD ON CENTOS7:-
============================================
1. install the dashboard on k8 master
   #kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml


2. by default kubernetes dashboard is not visible so we have to run following command
   #kubectl proxy 


3.  open webbrowser and hit the following command
   #http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/


4. open a new terminal
   #vi serviceaccount.yml
-----------------------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kube-system
-----------------------------------------------
#kubectl create -f serviceaccount.yml


5. create clusterrolebindinf account
   #vi clusterrolebinding.yml
----------------------------------------------------
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kube-system
------------------------------------------------------
#kubectl create -f clusterrolebinding.yml


6. now execute the following command to generate a token, copy paste the token in dashboard 
   #kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}')



=======================================
TO UNINSTALLING KUBERNETES ON CENTOS7:-
=======================================
1. to uninstall kubernetes on any node
   #kubeadm reset
   #yum erase kube* -y




===========================================
TO REMOVE A NODE IN KUBERNETES ON CENTOS7:-
===========================================
1. to list the nodes
   #kubectl get nodes


2. to delete the node
   #kubectl delete node <nodename>




=================================
UPGRADING KUBERNETES ON CENTOS7:-
=================================
1. upgrading kubernetes from one version to new version
   #kubeadm upgrade apply v1.x