autoscaling/v1 supports cpu autoscaling, for memory autoscaling you should use autoscaling/v2beta1
1. vi Hpa.yml
=======================================================================

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hpa-example
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: hpa-example
    spec:
      containers:
      - name: hpa-example
        image: gcr.io/google_containers/hpa-example
        ports:
        - name: http-port
          containerPort: 80
        resources:
          requests:
            cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: hpa-example
spec:
  ports:
  - port: 31001
    nodePort: 31001
    targetPort: http-port
    protocol: TCP
  selector:
    app: hpa-example
  type: NodePort
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-example-autoscaler----------------------------------------------->name of the hpa
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: hpa-example---------------------------------------------->this deployment name is referenced in deploymentobject
  minReplicas: 1----------------------------------------->min no of replicas
  maxReplicas: 10---------------------------------------------->max no of replicas
  targetCPUUtilizationPercentage: 50-------------------------------->autscaling triggers if it reach 50% of cpu

=======================================================================


2. to create a Hpa
   #kubectl create -f Hpa.yml


3. without manifest if you want to autscale
   #kubectl autoscale deployment hello-world --min=2 --max=5 --cpu-percent=50


4. to see/list hpa 
   #kubectl get hpa NameOfTheHpa


5. to know more deatils about hpa
   #kubectl describe hpa NameOfTheHpa


5. to delete a pod
   #kubectl delete hpa NameOfTheHpa